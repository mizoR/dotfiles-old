#!/bin/bash

set -e

DOTFILES_PATH=$(cd "$(dirname $0)/..";pwd)
BACKUP_PATH=$DOTFILES_PATH/backupfiles/$(date +%Y%m%d%H%M%S)

COLOR_ERROR="echo -en \\033[1;31;1m"
COLOR_WARN="echo -en \\033[1;35;1m"
COLOR_INFO="echo -en \\033[1;32m"
COLOR_DEBUG="echo -en \\033[1;34m"
COLOR_NORMAL="echo -en \\033[0;39m"

LOGLEVEL_ERROR=3
LOGLEVEL_WARN=2
LOGLEVEL_INFO=1
LOGLEVEL_DEBUG=0

LOGLEVEL=$LOGLEVEL_DEBUG

error() {
  if [ $LOGLEVEL -le $LOGLEVEL_ERROR ]; then
    $COLOR_ERROR
    echo "[E `date`] $@"
    $COLOR_NORMAL
  fi
}

warn() {
  if [ $LOGLEVEL -le $LOGLEVEL_WARN ]; then
    $COLOR_WARN
    echo "[W `date`] $@"
    $COLOR_NORMAL
  fi
}

info() {
  if [ $LOGLEVEL -le $LOGLEVEL_INFO ]; then
    $COLOR_INFO
    echo "[I `date`] $@"
    $COLOR_NORMAL
  fi
}

debug() {
  if [ $LOGLEVEL -le $LOGLEVEL_DEBUG ]; then
    $COLOR_DEBUG
    echo "[D `date`] $@"
    $COLOR_NORMAL
  fi
}

run() {
  debug $@
  $@
}

symlinks() {
  info == Start symlinks
  local dotfiles="$(ls $DOTFILES_PATH | grep -E '^dot\.') bin"
  for dotfile in $dotfiles; do
    local new_dotfile=$(echo $dotfile | sed s/^dot//)
    debug Linking $new_dotfile...
    if [ -L $HOME/$new_dotfile ]; then
      run rm $HOME/$new_dotfile
    elif [ -f $HOME/$new_dotfile ] || [ -d $HOME/$new_dotfile ]; then
      run mkdir -p $BACKUP_PATH
      run mv $HOME/$new_dotfile $BACKUP_PATH/$new_dotfile
    fi
    run ln -fs $DOTFILES_PATH/$dotfile $HOME/$new_dotfile
  done
  info == Finish symlinks
}

after_symlinks() {
  info == Start after_symlinks
  run vim -c NeoBundleInstall -c "q!"
  info == Finish after_symlinks
}

init() {
  info == Start init
  (
    run cd $DOTFILES_PATH
    run git submodule init
    run git submodule update
    run mkdir -p $DOTFILES_PATH/dot.rbenv/plugins
    if [ ! -d $DOTFILES_PATH/dot.rbenv/plugins/ruby-build ]; then
      run git clone git@github.com:sstephenson/ruby-build.git $DOTFILES_PATH/dot.rbenv/plugins/ruby-build
    fi
  )
  info == Finish init
}

update() {
  info == Start update
  (
    run cd $DOTFILES_PATH
    run git pull origin `git symbolic-ref --short HEAD`
    run git submodule foreach 'git pull origin master'
  )
  info == Finish update
}

case "$1" in
  install)
    init
    symlinks
    after_symlinks
    ;;
  update)
    update
    ;;
  *)
    $COLOR_WARN
    echo "Unknow option: $@"
    $COLOR_INFO
    echo "usage: ~/dotfiles/bin/dotfiles [install|update]"
    $COLOR_NORMAL
    ;;
esac

exit 0

